ðŸ”°Episode-1         '''''''Inception''''''

 ðŸ”†Part-1
   ðŸ’«what is all this thing are? document, createElement, getElementById
    ans : This is part of DOM (Document Object Model), Browser can Easyly Understand all this thing Because Browser has  inbuilt javascript Engine itself.

 ðŸ”†Part-2 (Adding CDN Link in HTML file)
   ðŸ’«What is CDN ?
    ans :- CDN = Content Devivery Network. 
    That means CDN is a Place where React are Hosted

   ðŸ’«What is CrossOrigin ?
    ans :- CORS (Cross-Origin-Resource-Sharing) is a HTTP feature that Enables a Web Application running Under the One Domain to access the Resource from another Domain.

 ðŸ”†Part-3 (Implementing React in HTML using CDN within Separate App.js javascript File) 
    const heading = React.createElement("h1", {}, "Hello world form React!");
    ðŸ”·Note : Here React.createElement() takes # attributes. 1.HTML Tag name, 2.HTML attributes, 3.Data Inside the Tag.

    console.log(heading); ðŸ’«#It Returns Nothing But a Object.

    const root = ReactDOM.createRoot(document.getElementById("root"));
    root.render(heading); ðŸ’«#Here render Mehtod Basically rendaring the Object to the Dom as a HTML Format.

ðŸ”†Part-4 (Create Nested Component using React.createElement)

    const parent = React.createElement("div", { id: "parent" }, [
      React.createElement("div", { id: "child1" }, [
        React.createElement("h1", {}, "This First Children of First Child"),
        React.createElement("h2", {}, "This Secound Children of First Child"),
      ]),
    
      React.createElement("div", { id: "child2" }, [
        React.createElement("h1", {}, "This First Children of 2nd Child"),
        React.createElement("h2", {}, "This Secound Children of 2nd Child"),
      ]),
    ]);
    console.log(parent);
    
    const render_root = ReactDOM.createRoot(document.getElementById("root1"));
    
    render_root.render(parent);

    ðŸ”·Note:- render Mehtod not Only Render the Data it also replaces the existing Data inside the Tag.




ðŸ”°Episode-2               '''''''Igniting Our Appp'''''''

    ðŸ”†Part-1
      ðŸ’«What is npm ? 
        ans :- Npm is a Packeg Maneger. Basically it's manages all the Packeges. npm is a command line that allows the developers to install the packages.

     ðŸ’«What is Packeg.json ?
       ans :- Packeg.json is a Configuration for Npm.

     ðŸ’«What is Dependences ? 
        ans :- A app runs on Lots of Packeges that Packeges are Called Dependences.

     ðŸ’«What is Bundler ? 
       ans :- A Bundler is a tool that takes all the javascript code, along with any other assets like CSS or Images and Combine the Large file into a single file which can serve to the Browser. There are some Popular Bundlers are :- Webpack , parcel, vite, Roll up etc.

     ðŸ’«Why we use Bundler ? 
      ans :- The purpose of using Bundler is to organize module and dependencies, Optimise website Performance, and reducet the file size.
     
     ðŸ’«What is the Difference between dependencies and devDependencies ?
      ans :-
     
     ðŸ’«What is the package-Lock.json ? 
      ans :- The package-Lock.json file is a lock File that tracks the exact version numbers of the dependencies and the packages for the curent projcet.

     ðŸ’«What if we delete Packeg-lock.json file ?
      ans :- If we Delete Packeg-lock.json file then, npm will go through the requirements and install the package version again.

     ðŸ’«What is node_modules ?
      ans :- node_modules is like a Database, the node_modules directory contain all the data of dependencies and the packages to build and run the projcet.

     ðŸ’«What is transsitive dependencies?
      ans :- Like a Examples, Our projcet need dependencies like parcel and parcel as a projcet has their own Dependences and those dependencies can have their own dependencies and this is known as a transsitive dependency.

     ðŸ’«- What is `.gitignore`? What should we add and not add into it?
      ans :- .gitignore is file where we basically declare what not to push to the repository.
      we should add /node_modules into .gitignore



     ðŸ’« "parcel": "^2.10.3" or "parcel": "`~`2.10.3" Here what is the  (^)Caret and (~)tilde before the version?
     ans :- (^)Caret - Means If there is Minor Update, then the version will do Automatically, and the 
     (~)tilde - Means If there is Major Update, then the version will do Automatically. 

    ðŸ”†Part-2              

     ðŸ’«What is the Difference between npm and npx?


     ðŸ’«What is .parcel-cache ?
      ans :- .cache folder stored the information about our projcet when parcel builds it, so that it doesn't have to re-analyze everyhthing form scratch. It's a key reson why parcel can be so fast in Development mode.
      
     ðŸ’« List down some superpowers of Parcel.
        -Dev build
        -Local Server
        -HMR = Hot Module Replacement
        -File Watching Algorithm -> Written in C++
        -Caching -> Faster builds
        -Image Optimiazation
        -Minification
        -Bundling
        -Compress
        -Consistent Hashing
        -Code Spliting
        -Differential Bundling -> Support Older Browser
        -Diagonostic
        -Error Handling
        -HTTPS
        -Tree Shaking -> Remove unused Code
        -Different dev and production Bundleing.

     ðŸ’«What is Tree Shaking?
      ans :- In Production build, Parcel statically analyzes improt and export of each module, and removes everyhthing that isn't used, This is Called "Tree Shaking" or "dead Code Elimination" 

     ðŸ’«What is Scope Hoisting?
      ans :- Parcel also Concatinates the modules into a single scope when it is Possible, rather then wrapping each module into a separate function. This is called "Scope Hoisting". This improves the Minification, more Effective and also improves runtime Performance.

     ðŸ’« What is Hot Module Replacement?
      ans :- As we make Change to our Code, Parcel Automatically rebuilds the Change files and Updates our app into  the Browser, By default Parcel fully refresh the page, but Some Cases it Perform HMR(Hot Module Replacement) , HMR  improves the Development Experience by Updating Module in the Browser at runtime without needing whole Page refresh. That means the Application State Can be retain as we change some small things in our Code. 


     ðŸ’« What is the `dist` folder?
      ans :- Parcel set the Location Where compiled bundles files will be stored, by default is 'dist' folder.

     ðŸ’«What is `browserlists`?
       ans :- When we are adding browserlists in Our Project that means, in which version of Browser our app will run.
        ðŸ”·Example :- In Package.json ->
         "browserlist" : {
          "last 2 versions" -->That Means my app Can Support at last 2 Older version Also.
        }

     ðŸ’«What is the code for Development version of parcel?
      -Code : npx parcel index.html

     ðŸ’«What is the code for Production version of parcel?
      -Code : npx parcel build index.html
        ðŸ”·Note :- We have to Remove the main File (default : App.js) from the Packeg.json Before Compiliing Production version.



ðŸ”° Episodes -3          '''''''Laying the Foundation''''''

     ðŸ”†What is JSX?
      ans :- JSX stands for JavaScript XML and JSX is a Syntax extensions for JavaScript that lets you write HTML- like markup inside a JavaScript File. Basically it's just porvides syntactic sugar for the React.createElement(types, props, ...children) function. 

     ðŸ”†What is React.createElement vs JSX?
      ans :- React.createElement is a core React function , that creates React elements. JSX is a syntax extension that lets you wirte HTML -like Markup inside  JavaScript.

     ðŸ”†What is Benefits of JSX?
      ans :- Every React Developer Find JSX is Very helpful as Visual aid when Working with UI inside JavaScript Code. It allows React to Show More useful error and Warning messages.

     ðŸ”†What is Behind the Scenes of JSX?
      ans :- Step 1 : User Write the Codes In JSX 
             Step 2 :and a Transpiler(Babel) transpile the Code into JavaScript that browsers will easyly understand.

     ðŸ”†What is Babel & parcel role in JSX?
      ans :- Babel basically transpile the JSX code into pure JavaScript that browsers can easyly understand

     ðŸ”†What is Components?
      ans :- A React Component is a JavaScript function that we can sprinkle with Markup. Component can be as small as Button, or as large as The Entier Page.  

     ðŸ”†What is Functional Components?
      ans :- A Functional Component is just a plain JavaScript function that accepts props as an arguments and returns a React element(JSX).

     ðŸ”†What is Composing Components?
      ans :- Like Using two Components into one and another, that is Called Components Composition. 



ðŸ”° Episodes - 4           ''''''''Talk is Cheap, Show me the Code''''''

    ðŸ”†What is <React.Fragment></React.Fragment> and <></>?
     ans :- React.Fragment that allows us to wrap or group muliple elements without adding Extra Node  to the DOM. This can be Very helpful when rendaring Multiple Child elements/Components inside a single Parent Component.

        <></> This is a Empty JSX tag as same as <React.Fragment></React.Fragment> .

    ðŸ”†What is Virtual DOM?
     ans :- The virtual DOM is Programming Concept Where an ideal or virtual Representation of a UI is Kept in a Memory and synced with  the "real" DOM by a Library Such as React DOM.
      And this Process is Called "RECONSILATION".

    ðŸ”†Is Shadow DOM same as the virtual DOM ?
     ans :-  No, Shadow DOM is browsers technology designed primarily for scopping variables and CSS web Components. The Virtual DOM  is a Concept implemented by libraries in JavaScript on top of the browser APIs.

    ðŸ”†What is Reconciliation in React?
     ans :- Reconciliation is a Process , which React updates the Browser DOM and Make React faster.
     React would first calculate the difference between the Reacl DOM and Virtual DOM, react always stores a copy of Virtual DOM , when we make any Changes with our Data, React Creates a copy of the Virtual DOM and Compare it with the Previous Virtual DOM and This comparison done by Diffing Algorithm. Now React Compares the virtual DOM with the Real DOM, and It findOuts the Changes Node and Update only the Changed node in Real DOM and Leaving the rest node as it is, This Process is Called Reconciliation.

    ðŸ”†What is React Fiber?
     ans :- React Fiber is a new Reconciliation Engine which has introduced in React 16, 
      The main purpose of React Fiber is to increase it's Suitability for areas like animation, layout , gestures. React Fiber has special ability to pause, abort, and reuse the work.

    ðŸ”†Why we need keys in React? When do we need keys in React?
     ans :- Keys helps React to identify which item have changed, or add or Removed.  A Key is a special attribute we should include when mapping over arrays to render Data.

    ðŸ”†Can we use index as keys in React?
     ans :- Using index as keys is not Recommended as per React Doc. If the order of item's may change, This can negatively impact on performance and may Cause issue with Component State.

    ðŸ”†What is props in React? Ways to
     ans :- React Components Use Props to comunicate each Other. Like , We can pass any types value to Child from Parent Using Props.

    ðŸ”†What is a Config Driven UI ?
     ans :- The UI id Driven by the Config which is diriven by the  Backend. 
      Like Example :- Zomato, Swiggy, Amazon.

    ðŸ”†What is Pure Function in React ?
     ans :- When a function's return value is determined by its input value. and It's return value are always the same for the same Input Values.

ðŸ”° Episodes - 5  ''''''''''''''Let's get Hooked''''''''''''''

    ðŸ”†What are JavaScript Modules ? 
     ans :- JavaScript Modules allows us to break up our Code into Separate Files.
        We can use One js File to another JavaScript File with the Help of Export import.

    ðŸ”†What ids exprot in JavaScript modules?
     ans :- In JavaScript modules export statement use to variables, function or class. which can be accesed to another file or Separate Files with the help of import statement.  

    ðŸ”†What is the difference between Named Export, Default export and * as export?
     ans :- 
     ðŸ’«Named Export :- In JavaScript allow us to export muliple variables, function or class from a single file. In Named Export we use export statement before the variables, function or class
      Example :- export const name = "Manash"
       or 

      exprot function MyName(name){
        return name;
      }
      console.log(MyName(Manash))

     ðŸ’« Default export :- In JavaScript allow us to export single value, function or class from a single file.
      Example :-
       const Header = ()=>{
        return(
            <h1>This is Simple Default Export</h1>
        )
       }
    
        export default Header;
     
    ðŸ”† What is the importance of config.js file
     ans :- Config.js allows developers to configure their applications in an XML block instead of hard-coding values inside their scripts or in JSON objects.

    ðŸ”† What are React Hooks?
     ans :- React Hooks ware inrtoduced in React 16.8 in February 2019. This features are allow to developers to manage the State and lifecycle behavior of React Functional Component.

    ðŸ”† Why do we need a useState Hook?
     ans :- useState Hook - Track the state of a Functional Component.
     Example :- If you have a Component that needs to change their State based on the User Action, at that time you we use useState Hook to manage the state and re-render the Component when the State changes.

     Example :-
     First - import useState from "react" 

     second - const [number, setNumber] = useState()

    ðŸ”·Note1 : - React Element is Nothing but a Javascript Object 
    
    ðŸ”·Note2 : - React Functional Component is Nothing but a Javascript Function.
    
    ðŸ”·Hook: -When ever a State Variable Changes React re render the Component 


ðŸ”° Episodes - 6        '''''Exploring the world'''''


   ðŸ”† What is a Microservice?
    ans :- Microservice architecture treats each function of an application as an independent service that can be alerted, Updated, or taken down without affecting rest of the application. 

     ðŸ’«Benifits :- 
        1)Better deploybility 
        2)Comfortable for developer to understand
        3)Better code Readability.
        4)The application start faster.

     ðŸ’«Drawbacks :- 
        1)Testing more Difficult acording to Monolith architecture.
        2)Developer must deal with the additional complexity of creating a distributed system.

   ðŸ”† What is Monolith architecture?
    ans:- Monolith means composed all in one piece. A Monolith application describe a single-tired software application in which different components combined in to a single program from a single platform.

     There is a Very famous quots is "Never Put all egs in one Busket" and Monolith does exact oposite things. 
    Mono means : Single , and Lithc means : Stone
   
     ðŸ’«Benifits :- 
        1)Simple to develop, 
        2)Simple to test, 
        3)Simple to deploy.

     ðŸ’«Drawbacks :-
        1) Maintenance - If application to Large and complex to understand, then it will be chalenging to make changes fast and correctly.
        2)The Size of the application can slow down the Start-up time.
        3)On each update we have to Re-deploy the application.
        4)Continuously Deployment is Difficult.

   ðŸ”† Why do we need a useEffect Hook?
    ans :- The React useState hook is used to manage and handle the state.
     States are mutable, which means their value can change.
     The useState hooks allows you to create, track and update a state in a functional component. 

   ðŸ”† What is Optional Chaining?
    ans :- The Optional Chaining operator (?.) is like a shortcut of accessing nested properties in a series of object.
     If the property exists, the operator will return the value of the property. If the property does not exist, the operator will return undefined insted of throwing error.

   ðŸ”† What is Shimmer UI?
    ans :- So suppose we build a web app with ReactJS for displaying the data we follow this process:

       Page Loads --> Render--> API call --> Render

    We have to render before the API calls , suppose API call is taking 500ms so for better UX we have to make sure before that otherwise it will fill like the site has stuck.

    So the in Secound Render stage, as a Regullar process we put Loading icon at the loading Phase, but here comes the part of Shimmer UI. When the site is loading it gives some fake empty cards(Which is castomizable ) and then dipslay the data After API calls. 


   ðŸ”† What is the difference between JS expression and JS statement
    ans :-

   ðŸ”† What is Conditional Rendering, explain with a code example
    ans :- In React, Conditional Rendaring is a process of displaying different content based on different condition or states. It allows to creates dynamic user interface.

     Example :- 
     export const User =() = >
      const Login =true;
       return Login ?(
           <h1>The User is LogedIn</h1>
       ):(

           <h1>The User is LogedOut</h1>
       )

   

   ðŸ”† What is CORS?
    ans :- CORS :- Cors Origin Resource Sharing. is a Browser mechanism that allows user to access resources from outside of a given Domain.

   ðŸ”† What is async and await?
    ans :- An async function is declared with the async keyword which enables the aynchronous, Promissed-based behavior to avoid the  Promise Chains, This Function can Contain zero or more await Expression.   


   ðŸ”† What is the use of `const json = await data.json();` in getRestaurants()
    ans :- JSON() :- Stands for Javascript Object Notation. JSON method of the Response interface takes a Response stream and reads it into completion. It returns a promise which resolved with the result and parsong the body test into JSON.

    There are two types of JSON methods 
    1). JSON.parse() :-This methos takes JSON String and transforms it into Javascript Object.
    2). JSON.stringfy () :- This methods takes Javascript Value (JSON Object) to a JSON String conversion 

   ðŸ”† Why do we need to add CORS extension in google Chrome? 
    ans :- If we want to access to fetch API from Particular website then we will get an Error. because, Cors has been blocked by CORS Policy : No 'Access-Control-Allow-Origin' header is prasent. So avoid This type of error or ByPass the CORS policy we have to use CORS ByPass extension.

   ðŸ”†What is CORS extension ?
    ans :- This extension bypasses the "XMLHttpRequest" and "fetch" rejections by altering the "Access-Control-Allow-Origin" and "Access-Control-Allow-Methods" headers for every request that the browser receives.

ðŸ”° Episodes - 7       ''''''Findng the Path'''''

    ðŸ”†How is useEffect Hook is Called
     ans:- First useEffect take a callBack function and a Dependency array. 

     ðŸ’«Defination of useEffect is :- Every time the ccomponent Render useEffect will be called. But the dependency Array changes the behavior of it's Render.


        1.If there is no dependency Array ==> useEffect call after every Render of that component.
        2.If there is an Epmty dependency Array ==> useEffect call on initial Render of that component.
            :- When the Page Loads then Component loads, when the Component loads or render then the useEffect is Called .
        3.If there is an dependency Array with value ==> useEffect call on initial Render of that component and when the dependency [btn] is changed or updated .

    ðŸ”†What is useRouteError ?
     ans :- It's a Hook which is Given to us by the React-router-dom.
      using this hook, is give more information about this Error.
      We can display Better Error Masage on our Page.

    ðŸ”†What is Outlet ?
     ans :- Outlet is React-router-dom component, Outlet should be used in parent route elements to render their child route elements.
     Ex :- Whenever their is changes in the path the Outlet will filed with the children acording to the path.

    ðŸ”†Why we should never use <a> anchor </a> tag in react for Routing?
     ans :- When we use the <a> anchor </a> tag in react for Routing the main Problem is the whole page get Refreshed. This Operation Basically Decrese the App Performance. 
     Insted of <a> anchor </a> tag we should use LINK component from React-router-dom.

    ðŸ”†How many types of routing prensent in web application?
     ans :- There are two types of routing prensent in web application
        1.Client site Routing :- If you have a dynamic that needs to update the Page frequently 
        2.Server site Routing :- If you have a Static Application that needs to fast and responsive.

    ðŸ”†What is Client site Routing(CSR)?
     ans :- In CSR, the HTML content is generated on the client-side by the browser using JavaScript. This means that the browser needs to download and execute the JavaScript code before it can render the page. CSR is often used for dynamic applications that need to update the page frequently.

    ðŸ”†What is Server site Routing(SSR)?
     ans :- In SSR, the HTML content is generated on the server-side and sent to the client as a pre-rendered HTML document. This means that the browser can render the page immediately without having to download and execute any JavaScript code. SSR is often used for static applications or applications that need to be fast and responsive.
    

ðŸ’¥What i have Learned ?
    
    ðŸ’ What is useState Hook and how it's work?
     ðŸ’ What is useEffect Hook and how it's work and Learned about useEffect dependencies?
      ðŸ’ React-roter-dom configuration and Routing One componnet to another component.
       ðŸ’ What is useRouteError Hook? and how it's work?
        ðŸ’ What is outlet?
         ðŸ’ Why we should not never use <a> tag in React for Routing. 
          ðŸ’ What is CSR and SSR.

         








ðŸ”†
ðŸ”°
âšœ
ðŸ’«
ðŸ”·